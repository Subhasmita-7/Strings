given string aabcbcdbca then output is dbca <- minimum string that covered all occurences of the string


import java.util.*;

public class MinWindowSubstring {
    public static String findMinWindow(String s) {
        Set<Character> uniqueChars = new HashSet<>();
        for (char c : s.toCharArray()) {
            uniqueChars.add(c);
        }

        Map<Character, Integer> windowCount = new HashMap<>();
        int required = uniqueChars.size();
        int formed = 0;
        int left = 0, minLen = Integer.MAX_VALUE;
        String minWindow = "";

        for (int right = 0; right < s.length(); right++) {
            char c = s.charAt(right);
            windowCount.put(c, windowCount.getOrDefault(c, 0) + 1);

            if (windowCount.get(c) == 1) {
                formed++;
            }

            while (formed == required) {
                if (right - left + 1 < minLen) {
                    minLen = right - left + 1;
                    minWindow = s.substring(left, right + 1);
                }

                char leftChar = s.charAt(left);
                windowCount.put(leftChar, windowCount.get(leftChar) - 1);
                if (windowCount.get(leftChar) == 0) {
                    formed--;
                }
                left++;
            }
        }

        return minWindow;
    }

    public static void main(String[] args) {
        String input = "aabcbcdbca";
        System.out.println("Minimum window: " + findMinWindow(input)); // Output: dbca
    }
}
